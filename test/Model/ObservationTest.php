<?php
/**
 * ObservationTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Mediator  SATUSEHAT
 *
 * Spesifikasi API ini merupakan contoh untuk menggunakan **Mediator Interoperabilitas SATUSEHAT** yang secara khusus ditujukan untuk mempercepat dan memudahkan proses interoperabilitas data Rekam Medis Elektronik (RME) antara sistem informasi di Fasilitas Kesehatan (Rumah Sakit, Puskesmas, Klinik, Laboratorium, dll) dengan Platform SATUSEHAT.  Mediator Interoperabilitas SATUSEHAT menyediakan format custom yang disederhanakan dari format HL7 FHIR sebagai perantara antara sistem RME dengan SATUSEHAT beserta sistem informasi kesehatan yang ada ditingkat nasional.
 *
 * OpenAPI spec version: 1.0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.59
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Mediator\SatuSehat\Lib\Client;

use PHPUnit\Framework\TestCase;

/**
 * ObservationTest Class Doc Comment
 *
 * @category    Class
 * @description Observation
 * @package     Mediator\SatuSehat\Lib\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ObservationTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Observation"
     */
    public function testObservation()
    {
    }

    /**
     * Test attribute "type_observation"
     */
    public function testPropertyTypeObservation()
    {
    }

    /**
     * Test attribute "issued"
     */
    public function testPropertyIssued()
    {
    }

    /**
     * Test attribute "value"
     */
    public function testPropertyValue()
    {
    }

    /**
     * Test attribute "value_unit"
     */
    public function testPropertyValueUnit()
    {
    }

    /**
     * Test attribute "value_detail"
     */
    public function testPropertyValueDetail()
    {
    }

    /**
     * Test attribute "effective_date_time"
     */
    public function testPropertyEffectiveDateTime()
    {
    }

    /**
     * Test attribute "performer"
     */
    public function testPropertyPerformer()
    {
    }

    /**
     * Test attribute "service_request"
     */
    public function testPropertyServiceRequest()
    {
    }

    /**
     * Test attribute "specimen"
     */
    public function testPropertySpecimen()
    {
    }

    /**
     * Test attribute "diagnostic_report"
     */
    public function testPropertyDiagnosticReport()
    {
    }

    /**
     * Test attribute "notes_detail"
     */
    public function testPropertyNotesDetail()
    {
    }

    /**
     * Test attribute "interpretation_code"
     */
    public function testPropertyInterpretationCode()
    {
    }

    /**
     * Test attribute "interpretation_text"
     */
    public function testPropertyInterpretationText()
    {
    }

    /**
     * Test attribute "sitb_tcm_code"
     */
    public function testPropertySitbTcmCode()
    {
    }

    /**
     * Test attribute "component"
     */
    public function testPropertyComponent()
    {
    }

    /**
     * Test attribute "derived_from"
     */
    public function testPropertyDerivedFrom()
    {
    }
}
