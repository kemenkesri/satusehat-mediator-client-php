<?php
/**
 * SpecimenTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Mediator  SATUSEHAT
 *
 * Spesifikasi API ini merupakan contoh untuk menggunakan **Mediator Interoperabilitas SATUSEHAT** yang secara khusus ditujukan untuk mempercepat dan memudahkan proses interoperabilitas data Rekam Medis Elektronik (RME) antara sistem informasi di Fasilitas Kesehatan (Rumah Sakit, Puskesmas, Klinik, Laboratorium, dll) dengan Platform SATUSEHAT.  Mediator Interoperabilitas SATUSEHAT menyediakan format custom yang disederhanakan dari format HL7 FHIR sebagai perantara antara sistem RME dengan SATUSEHAT beserta sistem informasi kesehatan yang ada ditingkat nasional.
 *
 * OpenAPI spec version: 1.0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.59
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Mediator\SatuSehat\Lib\Client;

use PHPUnit\Framework\TestCase;

/**
 * SpecimenTest Class Doc Comment
 *
 * @category    Class
 * @description Specimen
 * @package     Mediator\SatuSehat\Lib\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SpecimenTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Specimen"
     */
    public function testSpecimen()
    {
    }

    /**
     * Test attribute "identifier"
     */
    public function testPropertyIdentifier()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "reference"
     */
    public function testPropertyReference()
    {
    }

    /**
     * Test attribute "type_code"
     */
    public function testPropertyTypeCode()
    {
    }

    /**
     * Test attribute "type_detail"
     */
    public function testPropertyTypeDetail()
    {
    }

    /**
     * Test attribute "collected_time"
     */
    public function testPropertyCollectedTime()
    {
    }

    /**
     * Test attribute "transported_time"
     */
    public function testPropertyTransportedTime()
    {
    }

    /**
     * Test attribute "interpreter"
     */
    public function testPropertyInterpreter()
    {
    }

    /**
     * Test attribute "received_time"
     */
    public function testPropertyReceivedTime()
    {
    }

    /**
     * Test attribute "entrier"
     */
    public function testPropertyEntrier()
    {
    }

    /**
     * Test attribute "entry_time"
     */
    public function testPropertyEntryTime()
    {
    }

    /**
     * Test attribute "processing_time"
     */
    public function testPropertyProcessingTime()
    {
    }

    /**
     * Test attribute "code_request"
     */
    public function testPropertyCodeRequest()
    {
    }

    /**
     * Test attribute "condition"
     */
    public function testPropertyCondition()
    {
    }

    /**
     * Test attribute "specimen_no"
     */
    public function testPropertySpecimenNo()
    {
    }

    /**
     * Test attribute "note_author"
     */
    public function testPropertyNoteAuthor()
    {
    }

    /**
     * Test attribute "note_detail"
     */
    public function testPropertyNoteDetail()
    {
    }
}
