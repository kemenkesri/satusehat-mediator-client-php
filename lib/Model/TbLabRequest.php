<?php
/**
 * TbLabRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Mediator  SATUSEHAT
 *
 * Spesifikasi API ini merupakan contoh untuk menggunakan **Mediator Interoperabilitas SATUSEHAT** yang secara khusus ditujukan untuk mempercepat dan memudahkan proses interoperabilitas data Rekam Medis Elektronik (RME) antara sistem informasi di Fasilitas Kesehatan (Rumah Sakit, Puskesmas, Klinik, Laboratorium, dll) dengan Platform SATUSEHAT.  Mediator Interoperabilitas SATUSEHAT menyediakan format custom yang disederhanakan dari format HL7 FHIR sebagai perantara antara sistem RME dengan SATUSEHAT beserta sistem informasi kesehatan yang ada ditingkat nasional.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Mediator\SatuSehat\Lib\Client\Model;

use Mediator\SatuSehat\Lib\Client\ObjectSerializer;

/**
 * TbLabRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TbLabRequest extends MediatorResourceBasic
{
    public static $DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TbLabRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'person_id' => 'string',
        'tgl_daftar' => 'string',
        'dokter_pengirim' => 'string',
        'tgl_pengambilan' => 'string',
        'no_sediaan' => 'string',
        'tgl_pengiriman' => 'string',
        'alasan_pemeriksaan_id' => 'string',
        'follow_up_ke' => 'string',
        'pemeriksaan_ulang_ke' => 'string',
        'lokasi_penyakit_id' => 'string',
        'periksa_mikroskopis_id' => 'string',
        'periksa_xpert_id' => 'string',
        'contoh_uji_id' => 'string',
        'contoh_uji_lain' => 'string',
        'waktu1_id' => 'string',
        'lab_provinsi_id' => 'string',
        'lab_kabupaten_id' => 'string',
        'lab_tujuan_id' => 'string',
        'error' => 'string',
        'success' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'person_id' => null,
        'tgl_daftar' => null,
        'dokter_pengirim' => null,
        'tgl_pengambilan' => null,
        'no_sediaan' => null,
        'tgl_pengiriman' => null,
        'alasan_pemeriksaan_id' => null,
        'follow_up_ke' => null,
        'pemeriksaan_ulang_ke' => null,
        'lokasi_penyakit_id' => null,
        'periksa_mikroskopis_id' => null,
        'periksa_xpert_id' => null,
        'contoh_uji_id' => null,
        'contoh_uji_lain' => null,
        'waktu1_id' => null,
        'lab_provinsi_id' => null,
        'lab_kabupaten_id' => null,
        'lab_tujuan_id' => null,
        'error' => null,
        'success' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'person_id' => 'person_id',
        'tgl_daftar' => 'tgl_daftar',
        'dokter_pengirim' => 'dokter_pengirim',
        'tgl_pengambilan' => 'tgl_pengambilan',
        'no_sediaan' => 'no_sediaan',
        'tgl_pengiriman' => 'tgl_pengiriman',
        'alasan_pemeriksaan_id' => 'alasan_pemeriksaan_id',
        'follow_up_ke' => 'follow_up_ke',
        'pemeriksaan_ulang_ke' => 'pemeriksaan_ulang_ke',
        'lokasi_penyakit_id' => 'lokasi_penyakit_id',
        'periksa_mikroskopis_id' => 'periksa_mikroskopis_id',
        'periksa_xpert_id' => 'periksa_xpert_id',
        'contoh_uji_id' => 'contoh_uji_id',
        'contoh_uji_lain' => 'contoh_uji_lain',
        'waktu1_id' => 'waktu1_id',
        'lab_provinsi_id' => 'lab_provinsi_id',
        'lab_kabupaten_id' => 'lab_kabupaten_id',
        'lab_tujuan_id' => 'lab_tujuan_id',
        'error' => 'error',
        'success' => 'success'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'person_id' => 'setPersonId',
        'tgl_daftar' => 'setTglDaftar',
        'dokter_pengirim' => 'setDokterPengirim',
        'tgl_pengambilan' => 'setTglPengambilan',
        'no_sediaan' => 'setNoSediaan',
        'tgl_pengiriman' => 'setTglPengiriman',
        'alasan_pemeriksaan_id' => 'setAlasanPemeriksaanId',
        'follow_up_ke' => 'setFollowUpKe',
        'pemeriksaan_ulang_ke' => 'setPemeriksaanUlangKe',
        'lokasi_penyakit_id' => 'setLokasiPenyakitId',
        'periksa_mikroskopis_id' => 'setPeriksaMikroskopisId',
        'periksa_xpert_id' => 'setPeriksaXpertId',
        'contoh_uji_id' => 'setContohUjiId',
        'contoh_uji_lain' => 'setContohUjiLain',
        'waktu1_id' => 'setWaktu1Id',
        'lab_provinsi_id' => 'setLabProvinsiId',
        'lab_kabupaten_id' => 'setLabKabupatenId',
        'lab_tujuan_id' => 'setLabTujuanId',
        'error' => 'setError',
        'success' => 'setSuccess'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'person_id' => 'getPersonId',
        'tgl_daftar' => 'getTglDaftar',
        'dokter_pengirim' => 'getDokterPengirim',
        'tgl_pengambilan' => 'getTglPengambilan',
        'no_sediaan' => 'getNoSediaan',
        'tgl_pengiriman' => 'getTglPengiriman',
        'alasan_pemeriksaan_id' => 'getAlasanPemeriksaanId',
        'follow_up_ke' => 'getFollowUpKe',
        'pemeriksaan_ulang_ke' => 'getPemeriksaanUlangKe',
        'lokasi_penyakit_id' => 'getLokasiPenyakitId',
        'periksa_mikroskopis_id' => 'getPeriksaMikroskopisId',
        'periksa_xpert_id' => 'getPeriksaXpertId',
        'contoh_uji_id' => 'getContohUjiId',
        'contoh_uji_lain' => 'getContohUjiLain',
        'waktu1_id' => 'getWaktu1Id',
        'lab_provinsi_id' => 'getLabProvinsiId',
        'lab_kabupaten_id' => 'getLabKabupatenId',
        'lab_tujuan_id' => 'getLabTujuanId',
        'error' => 'getError',
        'success' => 'getSuccess'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['person_id'] = isset($data['person_id']) ? $data['person_id'] : null;
        $this->container['tgl_daftar'] = isset($data['tgl_daftar']) ? $data['tgl_daftar'] : null;
        $this->container['dokter_pengirim'] = isset($data['dokter_pengirim']) ? $data['dokter_pengirim'] : null;
        $this->container['tgl_pengambilan'] = isset($data['tgl_pengambilan']) ? $data['tgl_pengambilan'] : null;
        $this->container['no_sediaan'] = isset($data['no_sediaan']) ? $data['no_sediaan'] : null;
        $this->container['tgl_pengiriman'] = isset($data['tgl_pengiriman']) ? $data['tgl_pengiriman'] : null;
        $this->container['alasan_pemeriksaan_id'] = isset($data['alasan_pemeriksaan_id']) ? $data['alasan_pemeriksaan_id'] : null;
        $this->container['follow_up_ke'] = isset($data['follow_up_ke']) ? $data['follow_up_ke'] : null;
        $this->container['pemeriksaan_ulang_ke'] = isset($data['pemeriksaan_ulang_ke']) ? $data['pemeriksaan_ulang_ke'] : null;
        $this->container['lokasi_penyakit_id'] = isset($data['lokasi_penyakit_id']) ? $data['lokasi_penyakit_id'] : null;
        $this->container['periksa_mikroskopis_id'] = isset($data['periksa_mikroskopis_id']) ? $data['periksa_mikroskopis_id'] : null;
        $this->container['periksa_xpert_id'] = isset($data['periksa_xpert_id']) ? $data['periksa_xpert_id'] : null;
        $this->container['contoh_uji_id'] = isset($data['contoh_uji_id']) ? $data['contoh_uji_id'] : null;
        $this->container['contoh_uji_lain'] = isset($data['contoh_uji_lain']) ? $data['contoh_uji_lain'] : null;
        $this->container['waktu1_id'] = isset($data['waktu1_id']) ? $data['waktu1_id'] : null;
        $this->container['lab_provinsi_id'] = isset($data['lab_provinsi_id']) ? $data['lab_provinsi_id'] : null;
        $this->container['lab_kabupaten_id'] = isset($data['lab_kabupaten_id']) ? $data['lab_kabupaten_id'] : null;
        $this->container['lab_tujuan_id'] = isset($data['lab_tujuan_id']) ? $data['lab_tujuan_id'] : null;
        $this->container['error'] = isset($data['error']) ? $data['error'] : null;
        $this->container['success'] = isset($data['success']) ? $data['success'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets person_id
     *
     * @return string
     */
    public function getPersonId()
    {
        return $this->container['person_id'];
    }

    /**
     * Sets person_id
     *
     * @param string $person_id person_id
     *
     * @return $this
     */
    public function setPersonId($person_id)
    {
        $this->container['person_id'] = $person_id;

        return $this;
    }

    /**
     * Gets tgl_daftar
     *
     * @return string
     */
    public function getTglDaftar()
    {
        return $this->container['tgl_daftar'];
    }

    /**
     * Sets tgl_daftar
     *
     * @param string $tgl_daftar tgl_daftar
     *
     * @return $this
     */
    public function setTglDaftar($tgl_daftar)
    {
        $this->container['tgl_daftar'] = $tgl_daftar;

        return $this;
    }

    /**
     * Gets dokter_pengirim
     *
     * @return string
     */
    public function getDokterPengirim()
    {
        return $this->container['dokter_pengirim'];
    }

    /**
     * Sets dokter_pengirim
     *
     * @param string $dokter_pengirim dokter_pengirim
     *
     * @return $this
     */
    public function setDokterPengirim($dokter_pengirim)
    {
        $this->container['dokter_pengirim'] = $dokter_pengirim;

        return $this;
    }

    /**
     * Gets tgl_pengambilan
     *
     * @return string
     */
    public function getTglPengambilan()
    {
        return $this->container['tgl_pengambilan'];
    }

    /**
     * Sets tgl_pengambilan
     *
     * @param string $tgl_pengambilan tgl_pengambilan
     *
     * @return $this
     */
    public function setTglPengambilan($tgl_pengambilan)
    {
        $this->container['tgl_pengambilan'] = $tgl_pengambilan;

        return $this;
    }

    /**
     * Gets no_sediaan
     *
     * @return string
     */
    public function getNoSediaan()
    {
        return $this->container['no_sediaan'];
    }

    /**
     * Sets no_sediaan
     *
     * @param string $no_sediaan no_sediaan
     *
     * @return $this
     */
    public function setNoSediaan($no_sediaan)
    {
        $this->container['no_sediaan'] = $no_sediaan;

        return $this;
    }

    /**
     * Gets tgl_pengiriman
     *
     * @return string
     */
    public function getTglPengiriman()
    {
        return $this->container['tgl_pengiriman'];
    }

    /**
     * Sets tgl_pengiriman
     *
     * @param string $tgl_pengiriman tgl_pengiriman
     *
     * @return $this
     */
    public function setTglPengiriman($tgl_pengiriman)
    {
        $this->container['tgl_pengiriman'] = $tgl_pengiriman;

        return $this;
    }

    /**
     * Gets alasan_pemeriksaan_id
     *
     * @return string
     */
    public function getAlasanPemeriksaanId()
    {
        return $this->container['alasan_pemeriksaan_id'];
    }

    /**
     * Sets alasan_pemeriksaan_id
     *
     * @param string $alasan_pemeriksaan_id alasan_pemeriksaan_id
     *
     * @return $this
     */
    public function setAlasanPemeriksaanId($alasan_pemeriksaan_id)
    {
        $this->container['alasan_pemeriksaan_id'] = $alasan_pemeriksaan_id;

        return $this;
    }

    /**
     * Gets follow_up_ke
     *
     * @return string
     */
    public function getFollowUpKe()
    {
        return $this->container['follow_up_ke'];
    }

    /**
     * Sets follow_up_ke
     *
     * @param string $follow_up_ke follow_up_ke
     *
     * @return $this
     */
    public function setFollowUpKe($follow_up_ke)
    {
        $this->container['follow_up_ke'] = $follow_up_ke;

        return $this;
    }

    /**
     * Gets pemeriksaan_ulang_ke
     *
     * @return string
     */
    public function getPemeriksaanUlangKe()
    {
        return $this->container['pemeriksaan_ulang_ke'];
    }

    /**
     * Sets pemeriksaan_ulang_ke
     *
     * @param string $pemeriksaan_ulang_ke pemeriksaan_ulang_ke
     *
     * @return $this
     */
    public function setPemeriksaanUlangKe($pemeriksaan_ulang_ke)
    {
        $this->container['pemeriksaan_ulang_ke'] = $pemeriksaan_ulang_ke;

        return $this;
    }

    /**
     * Gets lokasi_penyakit_id
     *
     * @return string
     */
    public function getLokasiPenyakitId()
    {
        return $this->container['lokasi_penyakit_id'];
    }

    /**
     * Sets lokasi_penyakit_id
     *
     * @param string $lokasi_penyakit_id lokasi_penyakit_id
     *
     * @return $this
     */
    public function setLokasiPenyakitId($lokasi_penyakit_id)
    {
        $this->container['lokasi_penyakit_id'] = $lokasi_penyakit_id;

        return $this;
    }

    /**
     * Gets periksa_mikroskopis_id
     *
     * @return string
     */
    public function getPeriksaMikroskopisId()
    {
        return $this->container['periksa_mikroskopis_id'];
    }

    /**
     * Sets periksa_mikroskopis_id
     *
     * @param string $periksa_mikroskopis_id periksa_mikroskopis_id
     *
     * @return $this
     */
    public function setPeriksaMikroskopisId($periksa_mikroskopis_id)
    {
        $this->container['periksa_mikroskopis_id'] = $periksa_mikroskopis_id;

        return $this;
    }

    /**
     * Gets periksa_xpert_id
     *
     * @return string
     */
    public function getPeriksaXpertId()
    {
        return $this->container['periksa_xpert_id'];
    }

    /**
     * Sets periksa_xpert_id
     *
     * @param string $periksa_xpert_id periksa_xpert_id
     *
     * @return $this
     */
    public function setPeriksaXpertId($periksa_xpert_id)
    {
        $this->container['periksa_xpert_id'] = $periksa_xpert_id;

        return $this;
    }

    /**
     * Gets contoh_uji_id
     *
     * @return string
     */
    public function getContohUjiId()
    {
        return $this->container['contoh_uji_id'];
    }

    /**
     * Sets contoh_uji_id
     *
     * @param string $contoh_uji_id contoh_uji_id
     *
     * @return $this
     */
    public function setContohUjiId($contoh_uji_id)
    {
        $this->container['contoh_uji_id'] = $contoh_uji_id;

        return $this;
    }

    /**
     * Gets contoh_uji_lain
     *
     * @return string
     */
    public function getContohUjiLain()
    {
        return $this->container['contoh_uji_lain'];
    }

    /**
     * Sets contoh_uji_lain
     *
     * @param string $contoh_uji_lain contoh_uji_lain
     *
     * @return $this
     */
    public function setContohUjiLain($contoh_uji_lain)
    {
        $this->container['contoh_uji_lain'] = $contoh_uji_lain;

        return $this;
    }

    /**
     * Gets waktu1_id
     *
     * @return string
     */
    public function getWaktu1Id()
    {
        return $this->container['waktu1_id'];
    }

    /**
     * Sets waktu1_id
     *
     * @param string $waktu1_id waktu1_id
     *
     * @return $this
     */
    public function setWaktu1Id($waktu1_id)
    {
        $this->container['waktu1_id'] = $waktu1_id;

        return $this;
    }

    /**
     * Gets lab_provinsi_id
     *
     * @return string
     */
    public function getLabProvinsiId()
    {
        return $this->container['lab_provinsi_id'];
    }

    /**
     * Sets lab_provinsi_id
     *
     * @param string $lab_provinsi_id lab_provinsi_id
     *
     * @return $this
     */
    public function setLabProvinsiId($lab_provinsi_id)
    {
        $this->container['lab_provinsi_id'] = $lab_provinsi_id;

        return $this;
    }

    /**
     * Gets lab_kabupaten_id
     *
     * @return string
     */
    public function getLabKabupatenId()
    {
        return $this->container['lab_kabupaten_id'];
    }

    /**
     * Sets lab_kabupaten_id
     *
     * @param string $lab_kabupaten_id lab_kabupaten_id
     *
     * @return $this
     */
    public function setLabKabupatenId($lab_kabupaten_id)
    {
        $this->container['lab_kabupaten_id'] = $lab_kabupaten_id;

        return $this;
    }

    /**
     * Gets lab_tujuan_id
     *
     * @return string
     */
    public function getLabTujuanId()
    {
        return $this->container['lab_tujuan_id'];
    }

    /**
     * Sets lab_tujuan_id
     *
     * @param string $lab_tujuan_id lab_tujuan_id
     *
     * @return $this
     */
    public function setLabTujuanId($lab_tujuan_id)
    {
        $this->container['lab_tujuan_id'] = $lab_tujuan_id;

        return $this;
    }

    /**
     * Gets error
     *
     * @return string
     */
    public function getError()
    {
        return $this->container['error'];
    }

    /**
     * Sets error
     *
     * @param string $error error
     *
     * @return $this
     */
    public function setError($error)
    {
        $this->container['error'] = $error;

        return $this;
    }

    /**
     * Gets success
     *
     * @return bool
     */
    public function getSuccess()
    {
        return $this->container['success'];
    }

    /**
     * Sets success
     *
     * @param bool $success success
     *
     * @return $this
     */
    public function setSuccess($success)
    {
        $this->container['success'] = $success;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
