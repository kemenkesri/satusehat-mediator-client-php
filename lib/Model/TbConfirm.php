<?php
/**
 * TbConfirm
 *
 * PHP version 5
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Mediator  SATUSEHAT
 *
 * Spesifikasi API ini merupakan contoh untuk menggunakan **Mediator Interoperabilitas SATUSEHAT** yang secara khusus ditujukan untuk mempercepat dan memudahkan proses interoperabilitas data Rekam Medis Elektronik (RME) antara sistem informasi di Fasilitas Kesehatan (Rumah Sakit, Puskesmas, Klinik, Laboratorium, dll) dengan Platform SATUSEHAT.  Mediator Interoperabilitas SATUSEHAT menyediakan format custom yang disederhanakan dari format HL7 FHIR sebagai perantara antara sistem RME dengan SATUSEHAT beserta sistem informasi kesehatan yang ada ditingkat nasional.
 *
 * OpenAPI spec version: 1.0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.59
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Mediator\SatuSehat\Lib\Client\Model;

use ArrayAccess;
use Mediator\SatuSehat\Lib\Client\ObjectSerializer;

/**
 * TbConfirm Class Doc Comment
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TbConfirm implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TbConfirm';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'paduan_oat' => 'string',
        'bentuk_oat' => 'string',
        'paduan_pengobatan' => 'string',
        'tindak_lanjut' => 'string',
        'status_pengobatan' => 'string',
        'faskes_pengobatan' => 'string',
        'asal_rujukan_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'paduan_oat' => null,
        'bentuk_oat' => null,
        'paduan_pengobatan' => null,
        'tindak_lanjut' => null,
        'status_pengobatan' => null,
        'faskes_pengobatan' => null,
        'asal_rujukan_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'paduan_oat' => 'paduan_oat',
        'bentuk_oat' => 'bentuk_oat',
        'paduan_pengobatan' => 'paduan_pengobatan',
        'tindak_lanjut' => 'tindak_lanjut',
        'status_pengobatan' => 'status_pengobatan',
        'faskes_pengobatan' => 'faskes_pengobatan',
        'asal_rujukan_id' => 'asal_rujukan_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'paduan_oat' => 'setPaduanOat',
        'bentuk_oat' => 'setBentukOat',
        'paduan_pengobatan' => 'setPaduanPengobatan',
        'tindak_lanjut' => 'setTindakLanjut',
        'status_pengobatan' => 'setStatusPengobatan',
        'faskes_pengobatan' => 'setFaskesPengobatan',
        'asal_rujukan_id' => 'setAsalRujukanId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'paduan_oat' => 'getPaduanOat',
        'bentuk_oat' => 'getBentukOat',
        'paduan_pengobatan' => 'getPaduanPengobatan',
        'tindak_lanjut' => 'getTindakLanjut',
        'status_pengobatan' => 'getStatusPengobatan',
        'faskes_pengobatan' => 'getFaskesPengobatan',
        'asal_rujukan_id' => 'getAsalRujukanId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['paduan_oat'] = isset($data['paduan_oat']) ? $data['paduan_oat'] : null;
        $this->container['bentuk_oat'] = isset($data['bentuk_oat']) ? $data['bentuk_oat'] : null;
        $this->container['paduan_pengobatan'] = isset($data['paduan_pengobatan']) ? $data['paduan_pengobatan'] : null;
        $this->container['tindak_lanjut'] = isset($data['tindak_lanjut']) ? $data['tindak_lanjut'] : null;
        $this->container['status_pengobatan'] = isset($data['status_pengobatan']) ? $data['status_pengobatan'] : null;
        $this->container['faskes_pengobatan'] = isset($data['faskes_pengobatan']) ? $data['faskes_pengobatan'] : null;
        $this->container['asal_rujukan_id'] = isset($data['asal_rujukan_id']) ? $data['asal_rujukan_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets paduan_oat
     *
     * @return string
     */
    public function getPaduanOat()
    {
        return $this->container['paduan_oat'];
    }

    /**
     * Sets paduan_oat
     *
     * @param string $paduan_oat paduan_oat
     *
     * @return $this
     */
    public function setPaduanOat($paduan_oat)
    {
        $this->container['paduan_oat'] = $paduan_oat;

        return $this;
    }

    /**
     * Gets bentuk_oat
     *
     * @return string
     */
    public function getBentukOat()
    {
        return $this->container['bentuk_oat'];
    }

    /**
     * Sets bentuk_oat
     *
     * @param string $bentuk_oat bentuk_oat
     *
     * @return $this
     */
    public function setBentukOat($bentuk_oat)
    {
        $this->container['bentuk_oat'] = $bentuk_oat;

        return $this;
    }

    /**
     * Gets paduan_pengobatan
     *
     * @return string
     */
    public function getPaduanPengobatan()
    {
        return $this->container['paduan_pengobatan'];
    }

    /**
     * Sets paduan_pengobatan
     *
     * @param string $paduan_pengobatan paduan_pengobatan
     *
     * @return $this
     */
    public function setPaduanPengobatan($paduan_pengobatan)
    {
        $this->container['paduan_pengobatan'] = $paduan_pengobatan;

        return $this;
    }

    /**
     * Gets tindak_lanjut
     *
     * @return string
     */
    public function getTindakLanjut()
    {
        return $this->container['tindak_lanjut'];
    }

    /**
     * Sets tindak_lanjut
     *
     * @param string $tindak_lanjut tindak_lanjut
     *
     * @return $this
     */
    public function setTindakLanjut($tindak_lanjut)
    {
        $this->container['tindak_lanjut'] = $tindak_lanjut;

        return $this;
    }

    /**
     * Gets status_pengobatan
     *
     * @return string
     */
    public function getStatusPengobatan()
    {
        return $this->container['status_pengobatan'];
    }

    /**
     * Sets status_pengobatan
     *
     * @param string $status_pengobatan status_pengobatan
     *
     * @return $this
     */
    public function setStatusPengobatan($status_pengobatan)
    {
        $this->container['status_pengobatan'] = $status_pengobatan;

        return $this;
    }

    /**
     * Gets faskes_pengobatan
     *
     * @return string
     */
    public function getFaskesPengobatan()
    {
        return $this->container['faskes_pengobatan'];
    }

    /**
     * Sets faskes_pengobatan
     *
     * @param string $faskes_pengobatan faskes_pengobatan
     *
     * @return $this
     */
    public function setFaskesPengobatan($faskes_pengobatan)
    {
        $this->container['faskes_pengobatan'] = $faskes_pengobatan;

        return $this;
    }

    /**
     * Gets asal_rujukan_id
     *
     * @return string
     */
    public function getAsalRujukanId()
    {
        return $this->container['asal_rujukan_id'];
    }

    /**
     * Sets asal_rujukan_id
     *
     * @param string $asal_rujukan_id asal_rujukan_id
     *
     * @return $this
     */
    public function setAsalRujukanId($asal_rujukan_id)
    {
        $this->container['asal_rujukan_id'] = $asal_rujukan_id;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
