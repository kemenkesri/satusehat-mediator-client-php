<?php
/**
 * QuestionnaireResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Mediator  SATUSEHAT
 *
 * Spesifikasi API ini merupakan contoh untuk menggunakan **Mediator Interoperabilitas SATUSEHAT** yang secara khusus ditujukan untuk mempercepat dan memudahkan proses interoperabilitas data Rekam Medis Elektronik (RME) antara sistem informasi di Fasilitas Kesehatan (Rumah Sakit, Puskesmas, Klinik, Laboratorium, dll) dengan Platform SATUSEHAT.  Mediator Interoperabilitas SATUSEHAT menyediakan format custom yang disederhanakan dari format HL7 FHIR sebagai perantara antara sistem RME dengan SATUSEHAT beserta sistem informasi kesehatan yang ada ditingkat nasional.
 *
 * OpenAPI spec version: 1.0.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.59
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Mediator\SatuSehat\Lib\Client\Model;

use Mediator\SatuSehat\Lib\Client\ObjectSerializer;

/**
 * QuestionnaireResponse Class Doc Comment
 *
 * @category Class
 * @package  Mediator\SatuSehat\Lib\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class QuestionnaireResponse extends MediatorResourceBasic
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'QuestionnaireResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'questionnaire' => 'string',
        'type_diagnosis' => 'string',
        'location_anatomy' => 'string',
        'treatment_history' => 'string',
        'end_result_treatment' => 'string',
        'pergi_luar_negeri' => 'string',
        'negara_pergi_luar_negeri' => 'string',
        'rumah_luar_negeri' => 'string',
        'negara_rumah_luar_negeri' => 'string',
        'kontak_unggas' => 'string',
        'rumah_dekat_unggas' => 'string',
        'sudah_vaksin_influenza' => 'string',
        'sudah_vaksin_covid' => 'string',
        'alasan_tidak_diambil_specimen' => 'string',
        'dilakukan_xray' => 'string',
        'x_ray_pneumonia' => 'string',
        'penggunaan_antibiotik' => 'string',
        'jenis_antibiotik' => 'string',
        'penggunaan_antiviral' => 'string',
        'jenis_antiviral' => 'string',
        'keperluan_ventilator' => 'string',
        'keperluan_icu' => 'string',
        'keperluan_intubasi' => 'string',
        'lama_tinggal' => 'string',
        'tindak_lanjut' => 'string',
        'tanggal_dianjurkan_tes_hiv' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'questionnaire' => null,
        'type_diagnosis' => null,
        'location_anatomy' => null,
        'treatment_history' => null,
        'end_result_treatment' => null,
        'pergi_luar_negeri' => null,
        'negara_pergi_luar_negeri' => null,
        'rumah_luar_negeri' => null,
        'negara_rumah_luar_negeri' => null,
        'kontak_unggas' => null,
        'rumah_dekat_unggas' => null,
        'sudah_vaksin_influenza' => null,
        'sudah_vaksin_covid' => null,
        'alasan_tidak_diambil_specimen' => null,
        'dilakukan_xray' => null,
        'x_ray_pneumonia' => null,
        'penggunaan_antibiotik' => null,
        'jenis_antibiotik' => null,
        'penggunaan_antiviral' => null,
        'jenis_antiviral' => null,
        'keperluan_ventilator' => null,
        'keperluan_icu' => null,
        'keperluan_intubasi' => null,
        'lama_tinggal' => null,
        'tindak_lanjut' => null,
        'tanggal_dianjurkan_tes_hiv' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'questionnaire' => 'questionnaire',
        'type_diagnosis' => 'type_diagnosis',
        'location_anatomy' => 'location_anatomy',
        'treatment_history' => 'treatment_history',
        'end_result_treatment' => 'end_result_treatment',
        'pergi_luar_negeri' => 'pergi_luar_negeri',
        'negara_pergi_luar_negeri' => 'negara_pergi_luar_negeri',
        'rumah_luar_negeri' => 'rumah_luar_negeri',
        'negara_rumah_luar_negeri' => 'negara_rumah_luar_negeri',
        'kontak_unggas' => 'kontak_unggas',
        'rumah_dekat_unggas' => 'rumah_dekat_unggas',
        'sudah_vaksin_influenza' => 'sudah_vaksin_influenza',
        'sudah_vaksin_covid' => 'sudah_vaksin_covid',
        'alasan_tidak_diambil_specimen' => 'alasan_tidak_diambil_specimen',
        'dilakukan_xray' => 'dilakukan_xray',
        'x_ray_pneumonia' => 'x_ray_pneumonia',
        'penggunaan_antibiotik' => 'penggunaan_antibiotik',
        'jenis_antibiotik' => 'jenis_antibiotik',
        'penggunaan_antiviral' => 'penggunaan_antiviral',
        'jenis_antiviral' => 'jenis_antiviral',
        'keperluan_ventilator' => 'keperluan_ventilator',
        'keperluan_icu' => 'keperluan_icu',
        'keperluan_intubasi' => 'keperluan_intubasi',
        'lama_tinggal' => 'lama_tinggal',
        'tindak_lanjut' => 'tindak_lanjut',
        'tanggal_dianjurkan_tes_hiv' => 'tanggal_dianjurkan_tes_hiv'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'questionnaire' => 'setQuestionnaire',
        'type_diagnosis' => 'setTypeDiagnosis',
        'location_anatomy' => 'setLocationAnatomy',
        'treatment_history' => 'setTreatmentHistory',
        'end_result_treatment' => 'setEndResultTreatment',
        'pergi_luar_negeri' => 'setPergiLuarNegeri',
        'negara_pergi_luar_negeri' => 'setNegaraPergiLuarNegeri',
        'rumah_luar_negeri' => 'setRumahLuarNegeri',
        'negara_rumah_luar_negeri' => 'setNegaraRumahLuarNegeri',
        'kontak_unggas' => 'setKontakUnggas',
        'rumah_dekat_unggas' => 'setRumahDekatUnggas',
        'sudah_vaksin_influenza' => 'setSudahVaksinInfluenza',
        'sudah_vaksin_covid' => 'setSudahVaksinCovid',
        'alasan_tidak_diambil_specimen' => 'setAlasanTidakDiambilSpecimen',
        'dilakukan_xray' => 'setDilakukanXray',
        'x_ray_pneumonia' => 'setXRayPneumonia',
        'penggunaan_antibiotik' => 'setPenggunaanAntibiotik',
        'jenis_antibiotik' => 'setJenisAntibiotik',
        'penggunaan_antiviral' => 'setPenggunaanAntiviral',
        'jenis_antiviral' => 'setJenisAntiviral',
        'keperluan_ventilator' => 'setKeperluanVentilator',
        'keperluan_icu' => 'setKeperluanIcu',
        'keperluan_intubasi' => 'setKeperluanIntubasi',
        'lama_tinggal' => 'setLamaTinggal',
        'tindak_lanjut' => 'setTindakLanjut',
        'tanggal_dianjurkan_tes_hiv' => 'setTanggalDianjurkanTesHiv'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'questionnaire' => 'getQuestionnaire',
        'type_diagnosis' => 'getTypeDiagnosis',
        'location_anatomy' => 'getLocationAnatomy',
        'treatment_history' => 'getTreatmentHistory',
        'end_result_treatment' => 'getEndResultTreatment',
        'pergi_luar_negeri' => 'getPergiLuarNegeri',
        'negara_pergi_luar_negeri' => 'getNegaraPergiLuarNegeri',
        'rumah_luar_negeri' => 'getRumahLuarNegeri',
        'negara_rumah_luar_negeri' => 'getNegaraRumahLuarNegeri',
        'kontak_unggas' => 'getKontakUnggas',
        'rumah_dekat_unggas' => 'getRumahDekatUnggas',
        'sudah_vaksin_influenza' => 'getSudahVaksinInfluenza',
        'sudah_vaksin_covid' => 'getSudahVaksinCovid',
        'alasan_tidak_diambil_specimen' => 'getAlasanTidakDiambilSpecimen',
        'dilakukan_xray' => 'getDilakukanXray',
        'x_ray_pneumonia' => 'getXRayPneumonia',
        'penggunaan_antibiotik' => 'getPenggunaanAntibiotik',
        'jenis_antibiotik' => 'getJenisAntibiotik',
        'penggunaan_antiviral' => 'getPenggunaanAntiviral',
        'jenis_antiviral' => 'getJenisAntiviral',
        'keperluan_ventilator' => 'getKeperluanVentilator',
        'keperluan_icu' => 'getKeperluanIcu',
        'keperluan_intubasi' => 'getKeperluanIntubasi',
        'lama_tinggal' => 'getLamaTinggal',
        'tindak_lanjut' => 'getTindakLanjut',
        'tanggal_dianjurkan_tes_hiv' => 'getTanggalDianjurkanTesHiv'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    public const QUESTIONNAIRE_ANC = 'ANC';
    public const QUESTIONNAIRE_TB = 'TB';
    public const QUESTIONNAIRE_NAR = 'NAR';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getQuestionnaireAllowableValues()
    {
        return [
            self::QUESTIONNAIRE_ANC,
            self::QUESTIONNAIRE_TB,
            self::QUESTIONNAIRE_NAR,
        ];
    }


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['questionnaire'] = isset($data['questionnaire']) ? $data['questionnaire'] : null;
        $this->container['type_diagnosis'] = isset($data['type_diagnosis']) ? $data['type_diagnosis'] : null;
        $this->container['location_anatomy'] = isset($data['location_anatomy']) ? $data['location_anatomy'] : null;
        $this->container['treatment_history'] = isset($data['treatment_history']) ? $data['treatment_history'] : null;
        $this->container['end_result_treatment'] = isset($data['end_result_treatment']) ? $data['end_result_treatment'] : null;
        $this->container['pergi_luar_negeri'] = isset($data['pergi_luar_negeri']) ? $data['pergi_luar_negeri'] : null;
        $this->container['negara_pergi_luar_negeri'] = isset($data['negara_pergi_luar_negeri']) ? $data['negara_pergi_luar_negeri'] : null;
        $this->container['rumah_luar_negeri'] = isset($data['rumah_luar_negeri']) ? $data['rumah_luar_negeri'] : null;
        $this->container['negara_rumah_luar_negeri'] = isset($data['negara_rumah_luar_negeri']) ? $data['negara_rumah_luar_negeri'] : null;
        $this->container['kontak_unggas'] = isset($data['kontak_unggas']) ? $data['kontak_unggas'] : null;
        $this->container['rumah_dekat_unggas'] = isset($data['rumah_dekat_unggas']) ? $data['rumah_dekat_unggas'] : null;
        $this->container['sudah_vaksin_influenza'] = isset($data['sudah_vaksin_influenza']) ? $data['sudah_vaksin_influenza'] : null;
        $this->container['sudah_vaksin_covid'] = isset($data['sudah_vaksin_covid']) ? $data['sudah_vaksin_covid'] : null;
        $this->container['alasan_tidak_diambil_specimen'] = isset($data['alasan_tidak_diambil_specimen']) ? $data['alasan_tidak_diambil_specimen'] : null;
        $this->container['dilakukan_xray'] = isset($data['dilakukan_xray']) ? $data['dilakukan_xray'] : null;
        $this->container['x_ray_pneumonia'] = isset($data['x_ray_pneumonia']) ? $data['x_ray_pneumonia'] : null;
        $this->container['penggunaan_antibiotik'] = isset($data['penggunaan_antibiotik']) ? $data['penggunaan_antibiotik'] : null;
        $this->container['jenis_antibiotik'] = isset($data['jenis_antibiotik']) ? $data['jenis_antibiotik'] : null;
        $this->container['penggunaan_antiviral'] = isset($data['penggunaan_antiviral']) ? $data['penggunaan_antiviral'] : null;
        $this->container['jenis_antiviral'] = isset($data['jenis_antiviral']) ? $data['jenis_antiviral'] : null;
        $this->container['keperluan_ventilator'] = isset($data['keperluan_ventilator']) ? $data['keperluan_ventilator'] : null;
        $this->container['keperluan_icu'] = isset($data['keperluan_icu']) ? $data['keperluan_icu'] : null;
        $this->container['keperluan_intubasi'] = isset($data['keperluan_intubasi']) ? $data['keperluan_intubasi'] : null;
        $this->container['lama_tinggal'] = isset($data['lama_tinggal']) ? $data['lama_tinggal'] : null;
        $this->container['tindak_lanjut'] = isset($data['tindak_lanjut']) ? $data['tindak_lanjut'] : null;
        $this->container['tanggal_dianjurkan_tes_hiv'] = isset($data['tanggal_dianjurkan_tes_hiv']) ? $data['tanggal_dianjurkan_tes_hiv'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        $allowedValues = $this->getQuestionnaireAllowableValues();
        if (!is_null($this->container['questionnaire']) && !in_array($this->container['questionnaire'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'questionnaire', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets questionnaire
     *
     * @return string
     */
    public function getQuestionnaire()
    {
        return $this->container['questionnaire'];
    }

    /**
     * Sets questionnaire
     *
     * @param string $questionnaire questionnaire
     *
     * @return $this
     */
    public function setQuestionnaire($questionnaire)
    {
        $allowedValues = $this->getQuestionnaireAllowableValues();
        if (!is_null($questionnaire) && !in_array($questionnaire, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'questionnaire', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['questionnaire'] = $questionnaire;

        return $this;
    }

    /**
     * Gets type_diagnosis
     *
     * @return string
     */
    public function getTypeDiagnosis()
    {
        return $this->container['type_diagnosis'];
    }

    /**
     * Sets type_diagnosis
     *
     * @param string $type_diagnosis type_diagnosis
     *
     * @return $this
     */
    public function setTypeDiagnosis($type_diagnosis)
    {
        $this->container['type_diagnosis'] = $type_diagnosis;

        return $this;
    }

    /**
     * Gets location_anatomy
     *
     * @return string
     */
    public function getLocationAnatomy()
    {
        return $this->container['location_anatomy'];
    }

    /**
     * Sets location_anatomy
     *
     * @param string $location_anatomy location_anatomy
     *
     * @return $this
     */
    public function setLocationAnatomy($location_anatomy)
    {
        $this->container['location_anatomy'] = $location_anatomy;

        return $this;
    }

    /**
     * Gets treatment_history
     *
     * @return string
     */
    public function getTreatmentHistory()
    {
        return $this->container['treatment_history'];
    }

    /**
     * Sets treatment_history
     *
     * @param string $treatment_history treatment_history
     *
     * @return $this
     */
    public function setTreatmentHistory($treatment_history)
    {
        $this->container['treatment_history'] = $treatment_history;

        return $this;
    }

    /**
     * Gets end_result_treatment
     *
     * @return string
     */
    public function getEndResultTreatment()
    {
        return $this->container['end_result_treatment'];
    }

    /**
     * Sets end_result_treatment
     *
     * @param string $end_result_treatment end_result_treatment
     *
     * @return $this
     */
    public function setEndResultTreatment($end_result_treatment)
    {
        $this->container['end_result_treatment'] = $end_result_treatment;

        return $this;
    }

    /**
     * Gets pergi_luar_negeri
     *
     * @return string
     */
    public function getPergiLuarNegeri()
    {
        return $this->container['pergi_luar_negeri'];
    }

    /**
     * Sets pergi_luar_negeri
     *
     * @param string $pergi_luar_negeri pergi_luar_negeri
     *
     * @return $this
     */
    public function setPergiLuarNegeri($pergi_luar_negeri)
    {
        $this->container['pergi_luar_negeri'] = $pergi_luar_negeri;

        return $this;
    }

    /**
     * Gets negara_pergi_luar_negeri
     *
     * @return string
     */
    public function getNegaraPergiLuarNegeri()
    {
        return $this->container['negara_pergi_luar_negeri'];
    }

    /**
     * Sets negara_pergi_luar_negeri
     *
     * @param string $negara_pergi_luar_negeri negara_pergi_luar_negeri
     *
     * @return $this
     */
    public function setNegaraPergiLuarNegeri($negara_pergi_luar_negeri)
    {
        $this->container['negara_pergi_luar_negeri'] = $negara_pergi_luar_negeri;

        return $this;
    }

    /**
     * Gets rumah_luar_negeri
     *
     * @return string
     */
    public function getRumahLuarNegeri()
    {
        return $this->container['rumah_luar_negeri'];
    }

    /**
     * Sets rumah_luar_negeri
     *
     * @param string $rumah_luar_negeri rumah_luar_negeri
     *
     * @return $this
     */
    public function setRumahLuarNegeri($rumah_luar_negeri)
    {
        $this->container['rumah_luar_negeri'] = $rumah_luar_negeri;

        return $this;
    }

    /**
     * Gets negara_rumah_luar_negeri
     *
     * @return string
     */
    public function getNegaraRumahLuarNegeri()
    {
        return $this->container['negara_rumah_luar_negeri'];
    }

    /**
     * Sets negara_rumah_luar_negeri
     *
     * @param string $negara_rumah_luar_negeri negara_rumah_luar_negeri
     *
     * @return $this
     */
    public function setNegaraRumahLuarNegeri($negara_rumah_luar_negeri)
    {
        $this->container['negara_rumah_luar_negeri'] = $negara_rumah_luar_negeri;

        return $this;
    }

    /**
     * Gets kontak_unggas
     *
     * @return string
     */
    public function getKontakUnggas()
    {
        return $this->container['kontak_unggas'];
    }

    /**
     * Sets kontak_unggas
     *
     * @param string $kontak_unggas kontak_unggas
     *
     * @return $this
     */
    public function setKontakUnggas($kontak_unggas)
    {
        $this->container['kontak_unggas'] = $kontak_unggas;

        return $this;
    }

    /**
     * Gets rumah_dekat_unggas
     *
     * @return string
     */
    public function getRumahDekatUnggas()
    {
        return $this->container['rumah_dekat_unggas'];
    }

    /**
     * Sets rumah_dekat_unggas
     *
     * @param string $rumah_dekat_unggas rumah_dekat_unggas
     *
     * @return $this
     */
    public function setRumahDekatUnggas($rumah_dekat_unggas)
    {
        $this->container['rumah_dekat_unggas'] = $rumah_dekat_unggas;

        return $this;
    }

    /**
     * Gets sudah_vaksin_influenza
     *
     * @return string
     */
    public function getSudahVaksinInfluenza()
    {
        return $this->container['sudah_vaksin_influenza'];
    }

    /**
     * Sets sudah_vaksin_influenza
     *
     * @param string $sudah_vaksin_influenza sudah_vaksin_influenza
     *
     * @return $this
     */
    public function setSudahVaksinInfluenza($sudah_vaksin_influenza)
    {
        $this->container['sudah_vaksin_influenza'] = $sudah_vaksin_influenza;

        return $this;
    }

    /**
     * Gets sudah_vaksin_covid
     *
     * @return string
     */
    public function getSudahVaksinCovid()
    {
        return $this->container['sudah_vaksin_covid'];
    }

    /**
     * Sets sudah_vaksin_covid
     *
     * @param string $sudah_vaksin_covid sudah_vaksin_covid
     *
     * @return $this
     */
    public function setSudahVaksinCovid($sudah_vaksin_covid)
    {
        $this->container['sudah_vaksin_covid'] = $sudah_vaksin_covid;

        return $this;
    }

    /**
     * Gets alasan_tidak_diambil_specimen
     *
     * @return string
     */
    public function getAlasanTidakDiambilSpecimen()
    {
        return $this->container['alasan_tidak_diambil_specimen'];
    }

    /**
     * Sets alasan_tidak_diambil_specimen
     *
     * @param string $alasan_tidak_diambil_specimen alasan_tidak_diambil_specimen
     *
     * @return $this
     */
    public function setAlasanTidakDiambilSpecimen($alasan_tidak_diambil_specimen)
    {
        $this->container['alasan_tidak_diambil_specimen'] = $alasan_tidak_diambil_specimen;

        return $this;
    }

    /**
     * Gets dilakukan_xray
     *
     * @return string
     */
    public function getDilakukanXray()
    {
        return $this->container['dilakukan_xray'];
    }

    /**
     * Sets dilakukan_xray
     *
     * @param string $dilakukan_xray dilakukan_xray
     *
     * @return $this
     */
    public function setDilakukanXray($dilakukan_xray)
    {
        $this->container['dilakukan_xray'] = $dilakukan_xray;

        return $this;
    }

    /**
     * Gets x_ray_pneumonia
     *
     * @return string
     */
    public function getXRayPneumonia()
    {
        return $this->container['x_ray_pneumonia'];
    }

    /**
     * Sets x_ray_pneumonia
     *
     * @param string $x_ray_pneumonia x_ray_pneumonia
     *
     * @return $this
     */
    public function setXRayPneumonia($x_ray_pneumonia)
    {
        $this->container['x_ray_pneumonia'] = $x_ray_pneumonia;

        return $this;
    }

    /**
     * Gets penggunaan_antibiotik
     *
     * @return string
     */
    public function getPenggunaanAntibiotik()
    {
        return $this->container['penggunaan_antibiotik'];
    }

    /**
     * Sets penggunaan_antibiotik
     *
     * @param string $penggunaan_antibiotik penggunaan_antibiotik
     *
     * @return $this
     */
    public function setPenggunaanAntibiotik($penggunaan_antibiotik)
    {
        $this->container['penggunaan_antibiotik'] = $penggunaan_antibiotik;

        return $this;
    }

    /**
     * Gets jenis_antibiotik
     *
     * @return string
     */
    public function getJenisAntibiotik()
    {
        return $this->container['jenis_antibiotik'];
    }

    /**
     * Sets jenis_antibiotik
     *
     * @param string $jenis_antibiotik jenis_antibiotik
     *
     * @return $this
     */
    public function setJenisAntibiotik($jenis_antibiotik)
    {
        $this->container['jenis_antibiotik'] = $jenis_antibiotik;

        return $this;
    }

    /**
     * Gets penggunaan_antiviral
     *
     * @return string
     */
    public function getPenggunaanAntiviral()
    {
        return $this->container['penggunaan_antiviral'];
    }

    /**
     * Sets penggunaan_antiviral
     *
     * @param string $penggunaan_antiviral penggunaan_antiviral
     *
     * @return $this
     */
    public function setPenggunaanAntiviral($penggunaan_antiviral)
    {
        $this->container['penggunaan_antiviral'] = $penggunaan_antiviral;

        return $this;
    }

    /**
     * Gets jenis_antiviral
     *
     * @return string
     */
    public function getJenisAntiviral()
    {
        return $this->container['jenis_antiviral'];
    }

    /**
     * Sets jenis_antiviral
     *
     * @param string $jenis_antiviral jenis_antiviral
     *
     * @return $this
     */
    public function setJenisAntiviral($jenis_antiviral)
    {
        $this->container['jenis_antiviral'] = $jenis_antiviral;

        return $this;
    }

    /**
     * Gets keperluan_ventilator
     *
     * @return string
     */
    public function getKeperluanVentilator()
    {
        return $this->container['keperluan_ventilator'];
    }

    /**
     * Sets keperluan_ventilator
     *
     * @param string $keperluan_ventilator keperluan_ventilator
     *
     * @return $this
     */
    public function setKeperluanVentilator($keperluan_ventilator)
    {
        $this->container['keperluan_ventilator'] = $keperluan_ventilator;

        return $this;
    }

    /**
     * Gets keperluan_icu
     *
     * @return string
     */
    public function getKeperluanIcu()
    {
        return $this->container['keperluan_icu'];
    }

    /**
     * Sets keperluan_icu
     *
     * @param string $keperluan_icu keperluan_icu
     *
     * @return $this
     */
    public function setKeperluanIcu($keperluan_icu)
    {
        $this->container['keperluan_icu'] = $keperluan_icu;

        return $this;
    }

    /**
     * Gets keperluan_intubasi
     *
     * @return string
     */
    public function getKeperluanIntubasi()
    {
        return $this->container['keperluan_intubasi'];
    }

    /**
     * Sets keperluan_intubasi
     *
     * @param string $keperluan_intubasi keperluan_intubasi
     *
     * @return $this
     */
    public function setKeperluanIntubasi($keperluan_intubasi)
    {
        $this->container['keperluan_intubasi'] = $keperluan_intubasi;

        return $this;
    }

    /**
     * Gets lama_tinggal
     *
     * @return string
     */
    public function getLamaTinggal()
    {
        return $this->container['lama_tinggal'];
    }

    /**
     * Sets lama_tinggal
     *
     * @param string $lama_tinggal lama_tinggal
     *
     * @return $this
     */
    public function setLamaTinggal($lama_tinggal)
    {
        $this->container['lama_tinggal'] = $lama_tinggal;

        return $this;
    }

    /**
     * Gets tindak_lanjut
     *
     * @return string
     */
    public function getTindakLanjut()
    {
        return $this->container['tindak_lanjut'];
    }

    /**
     * Sets tindak_lanjut
     *
     * @param string $tindak_lanjut tindak_lanjut
     *
     * @return $this
     */
    public function setTindakLanjut($tindak_lanjut)
    {
        $this->container['tindak_lanjut'] = $tindak_lanjut;

        return $this;
    }

    /**
     * Gets tanggal_dianjurkan_tes_hiv
     *
     * @return string
     */
    public function getTanggalDianjurkanTesHiv()
    {
        return $this->container['tanggal_dianjurkan_tes_hiv'];
    }

    /**
     * Sets tanggal_dianjurkan_tes_hiv
     *
     * @param string $tanggal_dianjurkan_tes_hiv tanggal_dianjurkan_tes_hiv
     *
     * @return $this
     */
    public function setTanggalDianjurkanTesHiv($tanggal_dianjurkan_tes_hiv)
    {
        $this->container['tanggal_dianjurkan_tes_hiv'] = $tanggal_dianjurkan_tes_hiv;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
